[gd_scene load_steps=22 format=3 uid="uid://bjt1vhndbhcrd"]

[ext_resource type="Texture2D" uid="uid://4nyq64ttxe1x" path="res://resource/image/cardtemplate/card_backgound_frame.png" id="1_213qh"]
[ext_resource type="FontFile" uid="uid://vnepa6rklonj" path="res://resource/fonts/MSYHHV.TTC" id="1_n51ml"]
[ext_resource type="FontFile" uid="uid://vmp1130v7i47" path="res://resource/fonts/MSYHBD.TTC" id="2_8tlb0"]
[ext_resource type="Texture2D" uid="uid://cjcq7v1db370n" path="res://resource/image/cardtemplate/card_cost_frame.png" id="2_j8g0a"]
[ext_resource type="Texture2D" uid="uid://bjt3hx1ewr0ue" path="res://resource/image/cardtemplate/card_attack_frame.png" id="4_jy2rx"]
[ext_resource type="Texture2D" uid="uid://b6nunt03d2gvg" path="res://resource/image/cardtemplate/card_health_frame.png" id="5_4mi1x"]
[ext_resource type="FontFile" uid="uid://sshyf2b4qqgp" path="res://resource/fonts/MSYHSB.TTC" id="7_aucxy"]

[sub_resource type="GDScript" id="GDScript_l7nym"]
script/source = "extends Node2D

var cardid:int
var cardname:String
var cardcost:int
var card_default_cost:int
var cardattack:int
var card_default_attack:int
var cardhealth:int
var card_default_health:int
var cardsprite:String
var cardslot:int
var cardrarity:int
var card_index_when_pciked:int
var is_right_click=0
var card_ability_sum:int
var card_ability:Array=[]

var cardactivated:bool=false
var owned_by_player:bool=false
var cardselected:bool=false
#var cardmoving:bool=false
#var cardtargetX:int
#var cardtargetY:int
#export(\"res://gamemap/gamemap.tscn\") var rootnode
#signal cardinfochange

func cardload(a):
	cardid=a.get(\"cardid\")
	cardname=a.get(\"cardname\")
	cardcost=a.get(\"cardcost\")
	card_default_cost=cardcost
	cardattack=a.get(\"cardattack\")
	card_default_attack=cardattack
	cardhealth=a.get(\"cardhealth\")
	card_default_health=cardhealth
	cardsprite=a.get(\"cardsprite\")
	cardslot=a.get(\"cardslot\")
	cardrarity=a.get(\"cardrarity\")
	card_ability_sum=a.get(\"cardability\")
	print(cardslot)
	if cardrarity==0:
		$ColorRect/cardnameframe.color=Color.html(\"#b8ffd9\")
	elif cardrarity==1:
		$ColorRect/cardnameframe.color=Color.html(\"#ddfa99\")
	elif cardrarity==2:
		$ColorRect/cardnameframe.color=Color.html(\"#b1fcfa\")
	else:
		$ColorRect/cardnameframe.color=Color.html(\"#f0b95f\")
	
	
	get_node(\"ColorRect/cardcostframe/costlabel\").text=String.num_int64(cardcost)
	get_node(\"ColorRect/namelabel\").text=cardname
	get_node(\"ColorRect/cardattackframe/attacklabel\").text=String.num_int64(cardattack)
	get_node(\"ColorRect/cardhealthframe/healthlabel\").text=String.num_int64(cardhealth)
	get_node(\"ColorRect/cardimageframe/CenterContainer/cardsprite\").texture=load(cardsprite)
	card_ability_load()
# Called when the node enters the scene tree for the first time.
func card_ability_load():
	#$sigil_container.remove_child()
	var temp_divide=0
	var data_base10=card_ability_sum
	while(data_base10!=0):
		temp_divide=data_base10%2
		data_base10/=2
		card_ability.append(temp_divide)
	#sigil load in and create sigil sprite
	var groupindex=0
	for t in (card_ability):
		if(t==1):
			var sigil_frame=MarginContainer.new()
			$sigil_container.add_child(sigil_frame)
			sigil_frame.custom_minimum_size.x=25
			sigil_frame.custom_minimum_size.y=25
			var sigil_added=load(\"res://cardtemplate/card_sigil.tscn\").instantiate()
			sigil_frame.add_child(sigil_added)
			sigil_frame.add_to_group(\"sigil_group\")
			sigil_added.sigil_imageload(Globalsetting.global_sigil_image_route[groupindex])
		groupindex+=1
	pass

func card_ability_clear():
	$sigil_container.free()
	var newcontainer=HBoxContainer.new()
	$\".\".add_child(newcontainer)
	card_ability.clear()
	newcontainer.name=\"sigil_container\"
	newcontainer.size.x=70
	newcontainer.size.y=30
	newcontainer.position.x=15
	newcontainer.position.y=115
	newcontainer.alignment=BoxContainer.ALIGNMENT_CENTER

func _ready():
	$cardoutline.visible=false

	
func removefromhand():
	var parent_node = self.get_parent()
	parent_node.remove_child(self)
	deactivatedcard()
	

	
func activatecard():
	cardactivated=true
	print(name+\" is activated successfully\")
	
func deactivatedcard():
	cardactivated=false
	print(name+\" is deactivated successfully\")


func _on_cardcontrol_pressed():
	if cardactivated and is_right_click==0:
		cardselected=true
		$cardoutline.visible=true
		Globalsetting.global_card_current_selected=self
		print(Globalsetting.global_card_current_selected.name)
		print(name+\" is selected successfully\")
	if is_right_click==1 :
		print((name+\" is right clicked\"))
		
func _on_cardcontrol_button_down():
	var clickcheck=Input.is_mouse_button_pressed(MOUSE_BUTTON_RIGHT)
	if clickcheck:
		is_right_click=1
	else:
		#print(\"Left click card\")
		is_right_click=0

	
func _physics_process(delta):
	var rightclickpress=Input.is_action_pressed(\"鼠标右键\")
	if cardselected and rightclickpress:
		cardselected=false
		$cardoutline.visible=false
		print(name+\" is deselected successfully\")
	var leftclickpress=Input.is_action_pressed(\"鼠标左键\")
	if cardselected and leftclickpress:
		cardselected=false
		$cardoutline.visible=false
		print(name+\" is deselected successfully\")
		

		
func card_state_refresh():
	$ColorRect/cardcostframe/costlabel.text=String.num_int64(cardcost)
	if cardcost<card_default_cost:
		$ColorRect/cardcostframe/costlabel.add_theme_color_override(\"font_color\",Color(1,0,0,1))
	elif cardcost>card_default_cost:
		$ColorRect/cardcostframe/costlabel.add_theme_color_override(\"font_color\",Color(0,1,0,1))
	$ColorRect/cardhealthframe/healthlabel.text=String.num_int64(cardhealth)
	if cardhealth<card_default_health:
		$ColorRect/cardhealthframe/healthlabel.add_theme_color_override(\"font_color\",Color(1,0,0,1))
	elif cardhealth>card_default_health:
		$ColorRect/cardhealthframe/healthlabel.add_theme_color_override(\"font_color\",Color(0,1,0,1))
	$ColorRect/cardattackframe/attacklabel.text=String.num_int64(cardattack)
	if cardattack<card_default_attack:
		$ColorRect/cardattackframe/attacklabel.add_theme_color_override(\"font_color\",Color(1,0,0,1))
	elif cardattack>card_default_attack:
		$ColorRect/cardattackframe/attacklabel.add_theme_color_override(\"font_color\",Color(0,1,0,1))
	#if cardhealth<=0:
	#	card_died()
		
func animation_attack_up():
	$card_attack.play(\"attack_up\")
	#await $card_attack.animation_finished
	#var a=1
	
func animation_attack_down():
	$card_attack.play(\"attack_down\")
		
func get_hurt(amount:int):
	$dmgLabel.text=\"-\"+String.num_int64(amount)
	$AnimationPlayer.play(\"card_take_damage\")
	card_state_refresh()
	
func get_heal(amount:int):
	$healLabel.text=\"+\"+String.num_int64(amount)
	$AnimationPlayer.play(\"card_heal\")
	card_state_refresh()
		
func card_died(type:String):
	if len(card_ability)>=4 and card_ability[3]==1 and owned_by_player==true:
		var randomcardID:String=\"card\"+String.num_int64(randi_range(0,len(Globalsetting.cardloadid)))
		var rootnode=get_node(\"/root/Gamemap\")
		rootnode.give_card(randomcardID)
	if len(card_ability)>=5 and card_ability[4]==1 and owned_by_player==true:
		var selfcardID:String=\"card\"+String.num_int64(cardid)
		var rootnode2=get_node(\"/root/Gamemap\")
		rootnode2.give_card(selfcardID)
	print(self.name+\" died\")
	if type==\"poison\":
		$AnimationPlayer.play(\"card_died\")
	else:
		$AnimationPlayer.play(\"card_died_poison\")
	#await $AnimationPlayer.animation_finished

	
func animation_card_drop_in():
	$AnimationPlayer.play(\"card_drop_in\")

func card_spawn():
	$AnimationPlayer.play(\"card_spawn\")

		
func card_attack_action(target:Node2D):
	if len(card_ability)>=14 and card_ability[13]==1:
		var heal=cardattack
		var rootnode=get_node(\"/root/Gamemap\")
		rootnode.player_heal(heal,owned_by_player)
	if len(card_ability)>=3 and card_ability[2]==1:
		pass
	
	
func card_take_damage(dmgamount:int,dmgtype:String):
	var actual_damage:int
	if dmgtype==\"Poison\":
		actual_damage=9999
	else:
		actual_damage=dmgamount
	#divine shield[ability(1)]
	if len(card_ability)>=2 and card_ability[1]==1:
		actual_damage=0
		$AnimationPlayer.play(\"card_damage_block\")
		card_ability_sum=card_ability_sum-2
		card_ability_clear()
		card_ability_load()
		
	cardhealth=cardhealth-actual_damage
	if cardhealth<=0 and dmgtype==\"Poison\":
		card_died(\"poison\")
	elif cardhealth<=0 and dmgtype!=\"Poison\":
		card_died(\"null\")
	elif actual_damage>0:
		get_hurt(actual_damage)
	
	
func card_attribute_bonus(type:String,amount:int):
	if type==\"attack\":
		cardattack+=amount
	elif type==\"health\":
		cardhealth+=amount
	else:
		print(\"invaild type!\")
	card_state_refresh()


func _on_cardcontrol_mouse_entered():
	var activeted_info=get_node(\"cardinfo\")
	if activeted_info==null:
		var newpopup=load(\"res://cardtemplate/card_descrption_popup.tscn\").instantiate()
		$\".\".add_child(newpopup)
		newpopup.name=\"cardinfo\"
		newpopup.description_set(cardname,card_ability_sum)
		newpopup.spawn()


func _on_cardcontrol_mouse_exited():
	var activeted_info=get_node(\"cardinfo\")
	if activeted_info!=null:
		activeted_info.queue_free()


func _on_animation_player_animation_finished(anim_name):
	if anim_name==\"card_died\" or anim_name==\"card_died_poison\":
		self.get_parent().slot_is_empty=true
		self.queue_free()
	#pass # Replace with function body.
"

[sub_resource type="LabelSettings" id="LabelSettings_e8skl"]
line_spacing = 1.0
font = ExtResource("2_8tlb0")
font_size = 17
font_color = Color(0.160784, 0.160784, 0.160784, 1)
shadow_color = Color(0.364706, 0.364706, 0.364706, 1)
shadow_offset = Vector2(1.8, 1.35)

[sub_resource type="Animation" id="Animation_pjc0s"]
resource_name = "card_died"
length = 0.5
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:scale")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.5),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [Vector2(1, 1), Vector2(0, 0)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath(".:modulate")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0, 0.5),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [Color(1, 1, 1, 1), Color(0.196078, 0.00392157, 0.0784314, 1)]
}

[sub_resource type="Animation" id="Animation_wpycs"]
resource_name = "card_drop_in"
length = 0.4
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.4),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [Vector2(11, -164), Vector2(11, 6)]
}

[sub_resource type="Animation" id="Animation_ymuni"]
resource_name = "card_idle"
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("dmgLabel:self_modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Color(1, 1, 1, 0)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("healLabel:self_modulate")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Color(1, 1, 1, 0)]
}

[sub_resource type="Animation" id="Animation_ve6k7"]
resource_name = "card_spawn"
length = 0.5
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:scale")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.5),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [Vector2(0, 0), Vector2(1, 1)]
}

[sub_resource type="Animation" id="Animation_m4qme"]
resource_name = "card_take_damage"
length = 0.5
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.3, 0.5),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 0,
"values": [Color(1, 1, 1, 1), Color(1, 0.517647, 0.45098, 1), Color(1, 1, 1, 1)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("dmgLabel:self_modulate")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0, 0.5),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [Color(1, 1, 1, 1), Color(1, 1, 1, 0)]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("dmgLabel:position")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0, 0.5),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [Vector2(17, -13), Vector2(17, -55)]
}

[sub_resource type="Animation" id="Animation_0qo70"]
resource_name = "card_died"
length = 0.5
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:scale")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.5),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [Vector2(1, 1), Vector2(0, 0)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath(".:modulate")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0, 0.5),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [Color(1, 1, 1, 1), Color(0.0509804, 0.454902, 0, 1)]
}

[sub_resource type="Animation" id="Animation_rtwii"]
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.6, 1),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 0,
"values": [Color(1, 1, 1, 1), Color(1, 1, 0.298039, 1), Color(1, 0.988235, 0.972549, 1)]
}

[sub_resource type="Animation" id="Animation_76xm5"]
resource_name = "card_take_damage"
length = 0.5
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.3, 0.5),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 0,
"values": [Color(1, 1, 1, 1), Color(0.45098, 1, 0.678431, 1), Color(1, 1, 1, 1)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("healLabel:self_modulate")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0, 0.5),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [Color(1, 1, 1, 1), Color(1, 1, 1, 0)]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("healLabel:position")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0, 0.5),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [Vector2(17, -13), Vector2(17, -55)]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_cdufv"]
_data = {
"card_damage_block": SubResource("Animation_rtwii"),
"card_died": SubResource("Animation_pjc0s"),
"card_died_poison": SubResource("Animation_0qo70"),
"card_drop_in": SubResource("Animation_wpycs"),
"card_heal": SubResource("Animation_76xm5"),
"card_idle": SubResource("Animation_ymuni"),
"card_spawn": SubResource("Animation_ve6k7"),
"card_take_damage": SubResource("Animation_m4qme")
}

[sub_resource type="Animation" id="Animation_ar4tt"]
resource_name = "attack_down"
length = 0.7
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.4, 0.7),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 0,
"values": [Vector2(11, 6), Vector2(11, 56), Vector2(11, 6)]
}

[sub_resource type="Animation" id="Animation_htrmf"]
resource_name = "attack_up"
length = 0.7
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.4, 0.7),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 0,
"values": [Vector2(11, 6), Vector2(11, -46), Vector2(11, 6)]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_ijigf"]
_data = {
"attack_down": SubResource("Animation_ar4tt"),
"attack_up": SubResource("Animation_htrmf")
}

[node name="cardtemplate" type="Node2D"]
position = Vector2(11, 6)
script = SubResource("GDScript_l7nym")
metadata/_edit_vertical_guides_ = [7.0, 115.0]

[node name="cardoutline" type="ColorRect" parent="."]
offset_left = -15.0
offset_top = -10.0
offset_right = 115.0
offset_bottom = 147.0
color = Color(0.831373, 0.835294, 0, 1)

[node name="card_outline_frame" type="Sprite2D" parent="."]
self_modulate = Color(1, 1, 1, 0.87451)
position = Vector2(51, 69)
texture = ExtResource("1_213qh")

[node name="ColorRect" type="ColorRect" parent="."]
self_modulate = Color(1, 1, 1, 0)
offset_left = -11.0
offset_top = -6.0
offset_right = 109.0
offset_bottom = 144.0
pivot_offset = Vector2(60, 75)

[node name="cardimageframe" type="ColorRect" parent="ColorRect"]
layout_mode = 0
offset_left = 7.0
offset_top = 6.0
offset_right = 114.0
offset_bottom = 77.0
color = Color(0.611765, 0.611765, 0.611765, 1)

[node name="CenterContainer" type="CenterContainer" parent="ColorRect/cardimageframe"]
layout_mode = 0
offset_right = 108.0
offset_bottom = 72.0

[node name="cardsprite" type="Sprite2D" parent="ColorRect/cardimageframe/CenterContainer"]
position = Vector2(53.2277, 35.875)

[node name="cardcostframe" type="Sprite2D" parent="ColorRect"]
position = Vector2(4, 5)
texture = ExtResource("2_j8g0a")

[node name="costlabel" type="Label" parent="ColorRect/cardcostframe"]
offset_left = -20.0
offset_top = -21.0
offset_right = 13.0
offset_bottom = 15.0
theme_override_colors/font_color = Color(1, 1, 1, 1)
theme_override_colors/font_shadow_color = Color(0, 0, 0, 1)
theme_override_colors/font_outline_color = Color(0, 0, 0, 1)
theme_override_constants/outline_size = 3
theme_override_constants/shadow_outline_size = -6
theme_override_fonts/font = ExtResource("1_n51ml")
theme_override_font_sizes/font_size = 24
text = "1"
horizontal_alignment = 1
vertical_alignment = 1

[node name="cardattackframe" type="Sprite2D" parent="ColorRect"]
position = Vector2(0, 145)
texture = ExtResource("4_jy2rx")

[node name="attacklabel" type="Label" parent="ColorRect/cardattackframe"]
offset_left = -17.0
offset_top = -18.0
offset_right = 16.0
offset_bottom = 18.0
theme_override_colors/font_color = Color(1, 1, 1, 1)
theme_override_colors/font_shadow_color = Color(0, 0, 0, 1)
theme_override_colors/font_outline_color = Color(0, 0, 0, 1)
theme_override_constants/outline_size = 3
theme_override_constants/shadow_outline_size = -6
theme_override_fonts/font = ExtResource("1_n51ml")
theme_override_font_sizes/font_size = 24
text = "1"
horizontal_alignment = 1
vertical_alignment = 1

[node name="cardhealthframe" type="Sprite2D" parent="ColorRect"]
position = Vector2(123, 144)
texture = ExtResource("5_4mi1x")

[node name="healthlabel" type="Label" parent="ColorRect/cardhealthframe"]
offset_left = -16.0
offset_top = -17.0
offset_right = 17.0
offset_bottom = 19.0
theme_override_colors/font_color = Color(1, 1, 1, 1)
theme_override_colors/font_shadow_color = Color(0, 0, 0, 1)
theme_override_colors/font_outline_color = Color(0, 0, 0, 1)
theme_override_constants/outline_size = 3
theme_override_constants/shadow_outline_size = -6
theme_override_fonts/font = ExtResource("1_n51ml")
theme_override_font_sizes/font_size = 24
text = "1"
horizontal_alignment = 1
vertical_alignment = 1

[node name="cardnameframe" type="ColorRect" parent="ColorRect"]
self_modulate = Color(1, 1, 1, 0.796078)
layout_mode = 0
offset_left = 7.0
offset_top = 81.0
offset_right = 47.0
offset_bottom = 178.0
scale = Vector2(2.66943, 0.411679)
color = Color(0.941176, 0.72549, 0.372549, 1)

[node name="namelabel" type="Label" parent="ColorRect"]
layout_mode = 2
offset_left = 7.0
offset_top = 81.0
offset_right = 114.0
offset_bottom = 120.0
text = "1"
label_settings = SubResource("LabelSettings_e8skl")
horizontal_alignment = 1
vertical_alignment = 1
clip_text = true

[node name="cardcontrol" type="Button" parent="."]
offset_left = -11.0
offset_top = -8.0
offset_right = 110.0
offset_bottom = 144.0
button_mask = 3
flat = true

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
libraries = {
"": SubResource("AnimationLibrary_cdufv")
}

[node name="Card_Slide_in_Timer" type="Timer" parent="."]
wait_time = 0.05

[node name="Card_drop_in_Timer" type="Timer" parent="."]
wait_time = 0.05

[node name="card_attack" type="AnimationPlayer" parent="."]
libraries = {
"": SubResource("AnimationLibrary_ijigf")
}

[node name="sigil_container" type="HBoxContainer" parent="."]
offset_left = 14.0
offset_top = 117.0
offset_right = 84.0
offset_bottom = 147.0
alignment = 1

[node name="dmgLabel" type="Label" parent="."]
self_modulate = Color(1, 1, 1, 0)
offset_left = 17.0
offset_top = -13.0
offset_right = 71.0
offset_bottom = 66.0
theme_override_colors/font_color = Color(1, 0, 0, 1)
theme_override_colors/font_shadow_color = Color(0.219608, 0.219608, 0.219608, 1)
theme_override_colors/font_outline_color = Color(1, 1, 1, 1)
theme_override_constants/outline_size = 5
theme_override_fonts/font = ExtResource("7_aucxy")
theme_override_font_sizes/font_size = 56
text = "-2"
horizontal_alignment = 1
vertical_alignment = 1

[node name="healLabel" type="Label" parent="."]
self_modulate = Color(1, 1, 1, 0)
offset_left = 17.0
offset_top = -13.0
offset_right = 87.0
offset_bottom = 66.0
theme_override_colors/font_color = Color(0.0156863, 1, 0, 1)
theme_override_colors/font_shadow_color = Color(0.219608, 0.219608, 0.219608, 1)
theme_override_colors/font_outline_color = Color(1, 1, 1, 1)
theme_override_constants/outline_size = 5
theme_override_fonts/font = ExtResource("7_aucxy")
theme_override_font_sizes/font_size = 56
text = "+2"
horizontal_alignment = 1
vertical_alignment = 1

[connection signal="button_down" from="cardcontrol" to="." method="_on_cardcontrol_button_down"]
[connection signal="mouse_entered" from="cardcontrol" to="." method="_on_cardcontrol_mouse_entered"]
[connection signal="mouse_exited" from="cardcontrol" to="." method="_on_cardcontrol_mouse_exited"]
[connection signal="pressed" from="cardcontrol" to="." method="_on_cardcontrol_pressed"]
[connection signal="animation_finished" from="AnimationPlayer" to="." method="_on_animation_player_animation_finished"]
[connection signal="timeout" from="Card_Slide_in_Timer" to="." method="_on_card_slide_in_timer_timeout"]
[connection signal="timeout" from="Card_drop_in_Timer" to="." method="_on_card_drop_in_timer_timeout"]
