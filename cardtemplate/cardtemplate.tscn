[gd_scene load_steps=16 format=3 uid="uid://bjt1vhndbhcrd"]

[ext_resource type="FontFile" uid="uid://vnepa6rklonj" path="res://fonts/MSYHHV.TTC" id="2_eb4ms"]
[ext_resource type="FontFile" uid="uid://vmp1130v7i47" path="res://fonts/MSYHBD.TTC" id="2_fy46u"]

[sub_resource type="GDScript" id="GDScript_l7nym"]
script/source = "extends Node2D


var cardname:String
var cardcost:int
var cardattack:int
var cardhealth:int
var cardinfo:String
var cardsprite:String
var cardslot:int
var card_index_when_pciked:int
var is_right_click=0
var card_ability_sum:int
var card_ability:Array=[]

var cardactivated:bool=false
var cardselected:bool=false
var cardmoving:bool=false
var cardtargetX:int
var cardtargetY:int

#---------card ability---------
#  0 = null
#  1 (0)= Poisonous
#  2 (1)= Devine Shield
#  4 (2)= Triple Attack
#  8 (3)= Give a random card when died
#  16 (4)= Return to hand when died
#  32 (5)= Leave a bomb when died
#  64 (6)= Destroy opposite card when died
#  128(7) = Give a rabbit card when died
#-------------------------------

signal cardinfochange

func cardload(a):
	cardname=a.get(\"cardname\")
	cardcost=a.get(\"cardcost\")
	cardattack=a.get(\"cardattack\")
	cardhealth=a.get(\"cardhealth\")
	cardinfo=a.get(\"cardinfo\")
	cardsprite=a.get(\"cardsprite\")
	cardslot=a.get(\"cardslot\")
	card_ability_sum=a.get(\"cardability\")
	print(cardslot)
	
	
	get_node(\"ColorRect/cardcostframe/costlabel\").text=String.num_int64(cardcost)
	get_node(\"ColorRect/namelabel\").text=cardname
	get_node(\"ColorRect/cardattackframe/attacklabel\").text=String.num_int64(cardattack)
	get_node(\"ColorRect/cardhealthframe/healthlabel\").text=String.num_int64(cardhealth)
	#get_node(\"ColorRect/cardinfoframe/textcontainer/infolabel\").text=cardinfo
	get_node(\"ColorRect/cardimageframe/CenterContainer/cardsprite\").texture=load(cardsprite)
	#$ColorRect/cardimageframe/CenterContainer/cardsprite.scale.x=0.279
	#$ColorRect/cardimageframe/CenterContainer/cardsprite.scale.y=0.249
	card_ability_load()
	pass
# Called when the node enters the scene tree for the first time.
func card_ability_load():
	#$sigil_container.remove_child()
	var temp_divide=0
	var data_base10=card_ability_sum
	while(data_base10!=0):
		temp_divide=data_base10%2
		data_base10/=2
		card_ability.append(temp_divide)
	#sigil load in and create sigil sprite
	var groupindex=0
	for t in (card_ability):
		if(t==1):
			var sigil_frame=MarginContainer.new()
			$sigil_container.add_child(sigil_frame)
			sigil_frame.custom_minimum_size.x=25
			sigil_frame.custom_minimum_size.y=25
			var sigil_added=load(\"res://cardtemplate/card_sigil.tscn\").instantiate()
			sigil_frame.add_child(sigil_added)
			sigil_frame.add_to_group(\"sigil_group\")
			sigil_added.sigil_imageload(Globalsetting.global_sigil_image_route[groupindex])
		groupindex+=1
	pass

func card_ability_clear():
	$sigil_container.free()
	var newcontainer=HBoxContainer.new()
	$\".\".add_child(newcontainer)
	card_ability.clear()
	newcontainer.name=\"sigil_container\"
	newcontainer.size.x=70
	newcontainer.size.y=30
	newcontainer.position.x=15
	newcontainer.position.y=115
	newcontainer.alignment=BoxContainer.ALIGNMENT_CENTER

func _ready():
	$cardoutline.visible=false
	var rootnode=get_node(\"/root/Gamemap\")
	#print(rootnode)
	self.connect(\"cardinfochange\",Callable(rootnode,\"card_description_display\"))
	pass # Replace with function body.


# Called every frame. 'delta' is the elapsed time since the previous frame.
func _process(delta):
	pass
	
func removefromhand():
	var parent_node = self.get_parent()
	parent_node.remove_child(self)
	deactivatedcard()
	

	
func activatecard():
	cardactivated=true
	print(name+\" is activated successfully\")
	
func deactivatedcard():
	cardactivated=false
	print(name+\" is deactivated successfully\")


func _on_cardcontrol_pressed():
	if cardactivated and is_right_click==0:
		cardselected=true
		$cardoutline.visible=true
		Globalsetting.global_card_current_selected=self
		print(Globalsetting.global_card_current_selected.name)
		print(name+\" is selected successfully\")
	if is_right_click==1 :
		print((name+\" is right clicked\"))
		#print(get_node(\"/root/Gamemap\"))
		card_description_send()
		
func _on_cardcontrol_button_down():
	var clickcheck=Input.is_mouse_button_pressed(MOUSE_BUTTON_RIGHT)
	if clickcheck:
		#print(\"Right click card\")
		is_right_click=1
	else:
		#print(\"Left click card\")
		is_right_click=0
		
func card_description_send():

	var rootnode=get_node(\"/root/Gamemap\")
	var rootnode2=get_node(\"/root/DeckCreateScene\")
	if rootnode!=null:
		rootnode.card_description_display(cardinfo,cardname)
	else:
		rootnode2.card_description_display(cardinfo,cardname)
	pass

	
func _physics_process(delta):
	var rightclickpress=Input.is_action_pressed(\"鼠标右键\")
	if cardselected and rightclickpress:
		cardselected=false
		$cardoutline.visible=false
		print(name+\" is deselected successfully\")
	var leftclickpress=Input.is_action_pressed(\"鼠标左键\")
	if cardselected and leftclickpress:
		cardselected=false
		$cardoutline.visible=false
		print(name+\" is deselected successfully\")
		

		
func card_state_refresh():
	$ColorRect/cardhealthframe/healthlabel.text=String.num_int64(cardhealth)
	$ColorRect/cardattackframe/attacklabel.text=String.num_int64(cardattack)
	if cardhealth<=0:
		card_died()
		
func animation_attack_up():
	$card_attack.play(\"attack_up\")
	#await $card_attack.animation_finished
	#var a=1
	
func animation_attack_down():
	$card_attack.play(\"attack_down\")
		
func get_hurt():
	$AnimationPlayer.play(\"card_take_damage\")
		
func card_died():
	print(self.name+\" died\")
	$AnimationPlayer.play(\"card_died\")
	await $AnimationPlayer.animation_finished
	self.get_parent().slot_is_empty=true
	self.queue_free()
	
	
func card_slide_in(targetX:int):
	cardmoving=true
	$Card_Slide_in_Timer.start()
	cardtargetX=targetX
#	cardtargetY=targetY

	
func animation_card_drop_in():
	$AnimationPlayer.play(\"card_drop_in\")

func card_spawn():
	$AnimationPlayer.play(\"card_spawn\")
	
	
	


func _on_card_slide_in_timer_timeout():
	if cardmoving:
		self.global_position.x-=60
	if abs(self.global_position.x-cardtargetX)<=70 and cardmoving:
		cardmoving=false
		cardactivated=true
		$Card_Slide_in_Timer.stop()
		self.global_position.x=cardtargetX
		



func _on_card_drop_in_timer_timeout():
	if cardmoving:
		self.global_position.y-=20
	if abs(self.global_position.y-cardtargetX)<=30 and cardmoving:
		cardmoving=false
		cardactivated=true
		$Card_drop_in_Timer.stop()
		self.global_position.y=cardtargetY
	pass # Replace with function body.
	
func card_take_damage(dmgamount:int,dmgtype:String):
	var actual_damage:int
	if dmgtype==\"Poison\":
		actual_damage=9999
	else:
		actual_damage=dmgamount
	#divine shield[ability(1)]
	if len(card_ability)>=2 and card_ability[1]==1:
		actual_damage=0
		#card_ability[1]=0
		card_ability_sum=card_ability_sum-2
		card_ability_clear()
		card_ability_load()
		
	cardhealth=cardhealth-actual_damage
	if cardhealth<=0:
		card_died()
	pass







func _on_cardcontrol_mouse_entered():
	var newpopup=load(\"res://cardtemplate/card_descrption_popup.tscn\").instantiate()
	$\".\".add_child(newpopup)
	newpopup.name=\"cardinfo\"
	newpopup.description_set(cardinfo)
	newpopup.spawn()


func _on_cardcontrol_mouse_exited():
	get_node(\"cardinfo\").queue_free()
	pass # Replace with function body.
"

[sub_resource type="LabelSettings" id="LabelSettings_1nyig"]
line_spacing = 2.655
font = ExtResource("2_eb4ms")
font_size = 24
font_color = Color(1, 0.258824, 0.321569, 1)

[sub_resource type="LabelSettings" id="LabelSettings_no5ol"]
line_spacing = 2.655
font = ExtResource("2_eb4ms")
font_size = 24
font_color = Color(0.0784314, 0.698039, 0, 1)

[sub_resource type="LabelSettings" id="LabelSettings_e8skl"]
line_spacing = 1.0
font = ExtResource("2_fy46u")
font_size = 17
font_color = Color(0.160784, 0.160784, 0.160784, 1)
shadow_color = Color(0.364706, 0.364706, 0.364706, 1)
shadow_offset = Vector2(1.8, 1.35)

[sub_resource type="Animation" id="Animation_pjc0s"]
resource_name = "card_died"
length = 0.5
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:scale")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.5),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [Vector2(1, 1), Vector2(0, 0)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath(".:modulate")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0, 0.5),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [Color(1, 1, 1, 1), Color(0.196078, 0.00392157, 0.0784314, 1)]
}

[sub_resource type="Animation" id="Animation_wpycs"]
resource_name = "card_drop_in"
length = 0.4
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.4),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [Vector2(11, -164), Vector2(11, 6)]
}

[sub_resource type="Animation" id="Animation_ymuni"]
resource_name = "card_idle"

[sub_resource type="Animation" id="Animation_ve6k7"]
resource_name = "card_spawn"
length = 0.5
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:scale")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.5),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [Vector2(0, 0), Vector2(1, 1)]
}

[sub_resource type="Animation" id="Animation_m4qme"]
resource_name = "card_take_damage"
length = 0.5
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.3, 0.5),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 0,
"values": [Color(1, 1, 1, 1), Color(1, 0, 0, 1), Color(1, 1, 1, 1)]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_cdufv"]
_data = {
"card_died": SubResource("Animation_pjc0s"),
"card_drop_in": SubResource("Animation_wpycs"),
"card_idle": SubResource("Animation_ymuni"),
"card_spawn": SubResource("Animation_ve6k7"),
"card_take_damage": SubResource("Animation_m4qme")
}

[sub_resource type="Animation" id="Animation_ar4tt"]
resource_name = "attack_down"
length = 0.7
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.4, 0.7),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 0,
"values": [Vector2(11, 6), Vector2(11, 56), Vector2(11, 6)]
}

[sub_resource type="Animation" id="Animation_htrmf"]
resource_name = "attack_up"
length = 0.7
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.4, 0.7),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 0,
"values": [Vector2(11, 6), Vector2(11, -46), Vector2(11, 6)]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_ijigf"]
_data = {
"attack_down": SubResource("Animation_ar4tt"),
"attack_up": SubResource("Animation_htrmf")
}

[node name="cardtemplate" type="Node2D"]
position = Vector2(11, 6)
script = SubResource("GDScript_l7nym")
metadata/_edit_vertical_guides_ = [7.0, 115.0]

[node name="cardoutline" type="ColorRect" parent="."]
offset_left = -15.0
offset_top = -10.0
offset_right = 115.0
offset_bottom = 147.0
color = Color(0.831373, 0.835294, 0, 1)

[node name="ColorRect" type="ColorRect" parent="."]
offset_left = -11.0
offset_top = -6.0
offset_right = 109.0
offset_bottom = 144.0
pivot_offset = Vector2(60, 75)

[node name="cardimageframe" type="ColorRect" parent="ColorRect"]
layout_mode = 0
offset_left = 7.0
offset_top = 6.0
offset_right = 114.0
offset_bottom = 77.0
color = Color(0.611765, 0.611765, 0.611765, 1)

[node name="CenterContainer" type="CenterContainer" parent="ColorRect/cardimageframe"]
layout_mode = 0
offset_right = 108.0
offset_bottom = 72.0

[node name="cardsprite" type="Sprite2D" parent="ColorRect/cardimageframe/CenterContainer"]
position = Vector2(53.2277, 35.875)

[node name="cardcostframe" type="ColorRect" parent="ColorRect"]
layout_mode = 0
offset_left = -13.0
offset_top = -12.0
offset_right = 20.0
offset_bottom = 21.0

[node name="costlabel" type="Label" parent="ColorRect/cardcostframe"]
layout_mode = 0
offset_top = -1.0
offset_right = 33.0
offset_bottom = 35.0
theme_override_colors/font_color = Color(0, 0.541176, 0.92549, 1)
theme_override_colors/font_outline_color = Color(1, 1, 1, 1)
theme_override_constants/shadow_outline_size = -6
theme_override_fonts/font = ExtResource("2_eb4ms")
theme_override_font_sizes/font_size = 24
text = "1"
horizontal_alignment = 1
vertical_alignment = 1

[node name="cardattackframe" type="ColorRect" parent="ColorRect"]
layout_mode = 0
offset_left = -9.0
offset_top = 123.0
offset_right = 24.0
offset_bottom = 156.0

[node name="attacklabel" type="Label" parent="ColorRect/cardattackframe"]
layout_mode = 0
offset_top = -1.0
offset_right = 33.0
offset_bottom = 34.0
text = "1"
label_settings = SubResource("LabelSettings_1nyig")
horizontal_alignment = 1
vertical_alignment = 1
clip_text = true

[node name="cardhealthframe" type="ColorRect" parent="ColorRect"]
layout_mode = 0
offset_left = 96.0
offset_top = 124.0
offset_right = 129.0
offset_bottom = 157.0

[node name="healthlabel" type="Label" parent="ColorRect/cardhealthframe"]
layout_mode = 0
offset_right = 33.0
offset_bottom = 33.0
text = "1"
label_settings = SubResource("LabelSettings_no5ol")
horizontal_alignment = 1
vertical_alignment = 1

[node name="cardnameframe" type="ColorRect" parent="ColorRect"]
layout_mode = 0
offset_left = 7.0
offset_top = 81.0
offset_right = 47.0
offset_bottom = 178.0
scale = Vector2(2.66943, 0.411679)
color = Color(0.721569, 1, 0.85098, 1)

[node name="namelabel" type="Label" parent="ColorRect"]
layout_mode = 2
offset_left = 7.0
offset_top = 81.0
offset_right = 114.0
offset_bottom = 120.0
text = "Aluna"
label_settings = SubResource("LabelSettings_e8skl")
horizontal_alignment = 1
vertical_alignment = 1
clip_text = true

[node name="cardcontrol" type="Button" parent="."]
offset_left = -11.0
offset_top = -8.0
offset_right = 110.0
offset_bottom = 144.0
button_mask = 3
flat = true

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
libraries = {
"": SubResource("AnimationLibrary_cdufv")
}

[node name="Card_Slide_in_Timer" type="Timer" parent="."]
wait_time = 0.05

[node name="Card_drop_in_Timer" type="Timer" parent="."]
wait_time = 0.05

[node name="card_attack" type="AnimationPlayer" parent="."]
libraries = {
"": SubResource("AnimationLibrary_ijigf")
}

[node name="sigil_container" type="HBoxContainer" parent="."]
offset_left = 15.0
offset_top = 115.0
offset_right = 85.0
offset_bottom = 145.0
alignment = 1

[connection signal="cardinfochange" from="." to="." method="_on_cardinfochange"]
[connection signal="button_down" from="cardcontrol" to="." method="_on_cardcontrol_button_down"]
[connection signal="mouse_entered" from="cardcontrol" to="." method="_on_cardcontrol_mouse_entered"]
[connection signal="mouse_exited" from="cardcontrol" to="." method="_on_cardcontrol_mouse_exited"]
[connection signal="pressed" from="cardcontrol" to="." method="_on_cardcontrol_pressed"]
[connection signal="timeout" from="Card_Slide_in_Timer" to="." method="_on_card_slide_in_timer_timeout"]
[connection signal="timeout" from="Card_drop_in_Timer" to="." method="_on_card_drop_in_timer_timeout"]
